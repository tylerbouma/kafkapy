apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-broker
  name: kafka-service
  namespace: kafka
spec:
  ports:
  - port: 9092
  selector:
    app: kafka-broker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-broker
  name: kafka-broker
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
      annotations:
          "prometheus.io/scrape": "true"
          "prometheus.io/port": "19000"
    spec:
      initContainers:
      - name: prometheus-jmx-exporter
        image: spdigital/prometheus-jmx-exporter-kubernetes:0.3.1
        env:
        - name: SHARED_VOLUME_PATH
          value: /shared-volume
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      hostname: kafka-broker
      containers:
      - env:
        - name: SHARED_VOLUME_PATH
          value: /shared-volume
        - name: KAFKA_OPTS
          value: -javaagent:/shared-volume/jmx_prometheus_javaagent.jar=19000:/shared-volume/configs/kafka-config.yaml
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: 10.109.168.21:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-broker:9092
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        name: kafka-broker
        ports:
        - containerPort: 9092
        volumeMounts:
        - mountPath: /shared-volume
          name: shared-volume
      volumes:
        - name: shared-volume
          emptyDir: {}